<?xml version="1.0" encoding="UTF-8"?>

<beans:beans xmlns="http://www.springframework.org/schema/security"
             xmlns:beans="http://www.springframework.org/schema/beans"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
                        http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.1.xsd">

    <http pattern="/forend/login" security="none"/>
    <http pattern="/backend/login" security="none"/>

    <http entry-point-ref="multipleAuthenticationLoginEntry" authentication-manager-ref="authenticationManager">

        <custom-filter ref="multipleAuthenticationProcessingFilter" before="FORM_LOGIN_FILTER"/>
        <custom-filter ref="switchUserFilter" position="SWITCH_USER_FILTER"/>

        <logout logout-url="/logout" success-handler-ref="multipleLogoutSuccessHandler"/>

        <remember-me services-ref="rememberMeServices" key="ZhongGang"/>

        <intercept-url pattern="/**" access="ROLE_ADMIN"/>
    </http>

    <beans:bean id="multipleLogoutSuccessHandler" class="com.template.security.logout.MultipleLogoutSuccessHandler">
        <beans:property name="resolvers">
            <beans:list>
                <beans:ref local="forendLogoutSuccessUrlResolver"/>
                <beans:ref local="backendLogoutSuccessUrlResolver"/>
            </beans:list>
        </beans:property>
    </beans:bean>

    <beans:bean id="forendLogoutSuccessUrlResolver" class="com.template.security.logout.ForendLogoutSuccessUrlResolver">
        <beans:property name="url" value="/forend/login"/>
    </beans:bean>

    <beans:bean id="backendLogoutSuccessUrlResolver"
                class="com.template.security.logout.BackendLogoutSuccessUrlResolver">
        <beans:property name="url" value="/backend/login"/>
    </beans:bean>

    <beans:bean id="multipleAuthenticationLoginEntry"
                class="com.template.security.login.MultipleAuthenticationLoginEntry">
        <beans:property name="defaultLoginUrl" value="/backend/login"/>
        <beans:property name="directUrlResolvers">
            <beans:list>
                <beans:ref bean="backendLoginEntry"/>
                <beans:ref bean="forendLoginEntry"/>
            </beans:list>
        </beans:property>
    </beans:bean>

    <beans:bean id="switchUserFilter"
                class="org.springframework.security.web.authentication.switchuser.SwitchUserFilter">
        <beans:property name="userDetailsService" ref="userService"/>
        <beans:property name="usernameParameter" value="username"/>
        <beans:property name="targetUrl" value="/switch/success"/>
        <beans:property name="switchUserUrl" value="/switch"/>
        <beans:property name="exitUserUrl" value="/exit"/>
    </beans:bean>

    <beans:bean id="backendLoginEntry" class="com.template.security.shared.RequestUriDirectUrlResolver">
        <beans:property name="pattern" value="/backend"/>
        <beans:property name="directUrl" value="/backend/login"/>
    </beans:bean>

    <beans:bean id="forendLoginEntry" class="com.template.security.shared.RequestUriDirectUrlResolver">
        <beans:property name="pattern" value="/forend"/>
        <beans:property name="directUrl" value="/forend/login"/>
    </beans:bean>

    <beans:bean id="multipleAuthenticationProcessingFilter"
                class="com.template.security.filter.MultipleAuthenticationProcessingFilter">
        <beans:constructor-arg value="/login/check"/>
        <beans:property name="tokenResolvers">
            <beans:list>
                <beans:ref bean="backendAuthenticationTokenResolver"/>
                <beans:ref bean="forendAuthenticationTokenResolver"/>
            </beans:list>
        </beans:property>
        <beans:property name="authenticationManager" ref="authenticationManager"/>
        <beans:property name="authenticationSuccessHandler" ref="multipleAuthenticationSuccessHandler"/>
        <beans:property name="authenticationFailureHandler" ref="multipleAuthenticationFailureHandler"/>
        <beans:property name="rememberMeServices" ref="rememberMeServices"/>
    </beans:bean>

    <!--<beans:bean id="rememberMeServices"-->
    <!--class="org.springframework.security.web.authentication.rememberme.TokenBasedRememberMeServices">-->
    <!--<beans:property name="key" value="ZhongGang"/>-->
    <!--&lt;!&ndash;<beans:property name="alwaysRemember" value="true"/>&ndash;&gt;-->
    <!--<beans:property name="parameter" value="rememberMe"/>-->
    <!--<beans:property name="tokenValiditySeconds" value="604800"/>-->
    <!--<beans:property name="userDetailsService" ref="userService"/>-->
    <!--</beans:bean>-->

    <beans:bean id="rememberMeServices"
                class="org.springframework.security.web.authentication.rememberme.PersistentTokenBasedRememberMeServices">
        <beans:property name="key" value="ZhongGang"/>
        <beans:property name="parameter" value="rememberMe"/>
        <beans:property name="cookieName" value="rememberMe"/>
        <beans:property name="userDetailsService" ref="userService"/>
        <beans:property name="tokenRepository" ref="tokenRepository"/>
    </beans:bean>

    <beans:bean id="tokenRepository"
                class="org.springframework.security.web.authentication.rememberme.JdbcTokenRepositoryImpl">
        <!--<beans:property name="createTableOnStartup" value="true"/>-->
        <beans:property name="dataSource" ref="dataSource"/>
    </beans:bean>

    <beans:bean id="backendAuthenticationTokenResolver"
                class="com.template.security.filter.BackendAuthenticationTokenResolver">
        <beans:property name="parameterName" value="token"/>
        <beans:property name="parameterValue" value="backend"/>
    </beans:bean>

    <beans:bean id="forendAuthenticationTokenResolver"
                class="com.template.security.filter.ForendAuthenticationTokenResolver">
        <beans:property name="parameterName" value="token"/>
        <beans:property name="parameterValue" value="forend"/>
    </beans:bean>

    <beans:bean id="multipleAuthenticationSuccessHandler"
                class="com.template.security.authentication.handler.MultipleAuthenticationSuccessHandler">
        <beans:property name="alwaysUseDefaultTargetUrl" value="true"/>
        <beans:property name="resolvers">
            <beans:list>
                <beans:ref bean="backendAuthenticationSuccessUrlResolver"/>
                <beans:ref bean="forendAuthenticationSuccessUrlResolver"/>
            </beans:list>
        </beans:property>
    </beans:bean>

    <beans:bean id="backendAuthenticationSuccessUrlResolver"
                class="com.template.security.shared.RequestParameterDirectUrlResolver">
        <beans:property name="parameterName" value="token"/>
        <beans:property name="pattern" value="backend"/>
        <beans:property name="directUrl" value="/backend/login/success"/>
    </beans:bean>

    <beans:bean id="forendAuthenticationSuccessUrlResolver"
                class="com.template.security.shared.RequestParameterDirectUrlResolver">
        <beans:property name="parameterName" value="token"/>
        <beans:property name="pattern" value="forend"/>
        <beans:property name="directUrl" value="/forend/login/success"/>
    </beans:bean>

    <beans:bean id="multipleAuthenticationFailureHandler"
                class="org.springframework.security.web.authentication.ExceptionMappingAuthenticationFailureHandler">
        <beans:property name="exceptionMappings">
            <beans:map>
                <beans:entry key="com.template.security.exception.EmailNotFoundException"
                             value="/forend/login?error=1"/>
                <beans:entry key="com.template.security.exception.PhoneNotFoundException"
                             value="/forend/login?error=2"/>
                <beans:entry key="org.springframework.security.core.userdetails.UsernameNotFoundException"
                             value="/backend/login?error=1"/>
                <beans:entry key="com.template.security.exception.CaptchaWrongException"
                             value="/backend/login?error=2"/>
            </beans:map>
        </beans:property>
    </beans:bean>

    <authentication-manager alias="authenticationManager" erase-credentials="false">
        <authentication-provider ref="forendAuthenticationProvider"/>
        <authentication-provider ref="backendAuthenticationProvider"/>
    </authentication-manager>

    <beans:bean id="backendAuthenticationProvider"
                class="com.template.security.authentication.provider.BackendAuthenticationProvider">
        <beans:property name="userDetailsService" ref="userService"/>
    </beans:bean>

    <beans:bean id="forendAuthenticationProvider"
                class="com.template.security.authentication.provider.ForendAuthenticationProvider"/>
</beans:beans>